{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meeve\\\\OneDrive\\\\Desktop\\\\Assignment\\\\Client\\\\book-list\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport bookService from '../services/book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentBook,\n    setCurrentBook,\n    books,\n    setBooks\n  } = _ref;\n  const [title, setTitle] = useState(currentBook.title);\n  const [author, setAuthor] = useState(currentBook.author);\n  const [description, setDescription] = useState(currentBook.description);\n  const [isDisabled, setIsDisabled] = useState(true);\n  useEffect(() => {\n    setTitle(currentBook.title);\n    setAuthor(currentBook.author);\n    setDescription(currentBook.description); // Only change disabled state after a currentbook is set by user\n\n    if (currentBook.id !== null) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [currentBook]);\n\n  const titleInputHandler = e => {\n    setTitle(e.target.value);\n  };\n\n  const authorInputHandler = e => {\n    setAuthor(e.target.value);\n  };\n\n  const descriptionInputHandler = e => {\n    setDescription(e.target.value);\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const newBook = {\n      title: title,\n      author: author,\n      description: description\n    };\n\n    try {\n      const res = await bookService.addBook(newBook);\n      const newBooks = books.push(newBook);\n      setBooks(newBooks);\n    } catch (error) {\n      console.log('Error: addBook');\n      console.log(error);\n    }\n  };\n\n  const updateHandler = async () => {\n    const updatedBook = { ...currentBook,\n      title: title,\n      author: author,\n      description: description\n    };\n\n    try {\n      const res = await bookService.updateBook(currentBook.id, updatedBook);\n      const newBooks = books.map(b => b.id === updatedBook.id ? updatedBook : b);\n      setBooks(newBooks);\n    } catch (error) {\n      console.log('Error: updateBook');\n      console.log(error);\n    }\n  };\n\n  const deleteHandler = async () => {\n    try {\n      await bookService.deleteBook(currentBook.id);\n      const newBooks = books.map(b => b.id !== currentBook.id);\n      setBooks(newBooks);\n    } catch (error) {\n      console.log('Error: deleteBook');\n      console.log(error);\n    }\n  };\n\n  const clearSelectionHandler = () => {\n    const clearedFormData = {\n      id: null,\n      title: '',\n      author: '',\n      description: ''\n    };\n    setCurrentBook(clearedFormData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: titleInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        name: \"author\",\n        value: author,\n        onChange: authorInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-input\",\n        value: description,\n        onChange: descriptionInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: submitHandler,\n          children: \"Save New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          disabled: isDisabled,\n          onClick: updateHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          disabled: isDisabled,\n          onClick: deleteHandler,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          disabled: isDisabled,\n          onClick: clearSelectionHandler,\n          children: \"Clear book selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"u5y+avmGOari0w8QeQ8U2RVQ0wY=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/src/components/Form.js"],"names":["React","useState","useEffect","bookService","Form","currentBook","setCurrentBook","books","setBooks","title","setTitle","author","setAuthor","description","setDescription","isDisabled","setIsDisabled","id","titleInputHandler","e","target","value","authorInputHandler","descriptionInputHandler","submitHandler","preventDefault","newBook","res","addBook","newBooks","push","error","console","log","updateHandler","updatedBook","updateBook","map","b","deleteHandler","deleteBook","clearSelectionHandler","clearedFormData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport bookService from '../services/book'\r\n\r\nconst Form = ({ currentBook, setCurrentBook, books, setBooks }) => {\r\n    const [title, setTitle] = useState(currentBook.title)\r\n    const [author, setAuthor] = useState(currentBook.author)\r\n    const [description, setDescription] = useState(currentBook.description)\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTitle(currentBook.title)\r\n        setAuthor(currentBook.author)\r\n        setDescription(currentBook.description)\r\n\r\n        // Only change disabled state after a currentbook is set by user\r\n        if (currentBook.id !== null) {\r\n            setIsDisabled(false)\r\n        } else {\r\n            setIsDisabled(true)\r\n        }\r\n    }, [currentBook])\r\n\r\n    const titleInputHandler = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const authorInputHandler = (e) => {\r\n        setAuthor(e.target.value)\r\n    }\r\n\r\n    const descriptionInputHandler = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const newBook = {\r\n            title: title,\r\n            author: author,\r\n            description: description,\r\n        }\r\n        try {\r\n            const res = await bookService.addBook(newBook)\r\n            const newBooks = books.push(newBook)\r\n            setBooks(newBooks)\r\n        } catch (error) {\r\n            console.log('Error: addBook')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const updateHandler = async () => {\r\n        const updatedBook = {\r\n            ...currentBook,\r\n            title: title,\r\n            author: author,\r\n            description: description,\r\n        }\r\n        try {\r\n            const res = await bookService.updateBook(\r\n                currentBook.id,\r\n                updatedBook\r\n            )\r\n            const newBooks = books.map((b) =>\r\n                b.id === updatedBook.id ? updatedBook : b\r\n            )\r\n            setBooks(newBooks)\r\n        } catch (error) {\r\n            console.log('Error: updateBook')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteHandler = async () => {\r\n        try {\r\n            await bookService.deleteBook(currentBook.id)\r\n            const newBooks = books.map((b) => b.id !== currentBook.id)\r\n            setBooks(newBooks)\r\n        } catch (error) {\r\n            console.log('Error: deleteBook')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const clearSelectionHandler = () => {\r\n        const clearedFormData = {\r\n            id: null,\r\n            title: '',\r\n            author: '',\r\n            description: '',\r\n        }\r\n        setCurrentBook(clearedFormData)\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <form>\r\n                <label>Title</label>\r\n                <input\r\n                    className=\"form-input\"\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={titleInputHandler}\r\n                />\r\n                <label>Author</label>\r\n                <input\r\n                    className=\"form-input\"\r\n                    type=\"text\"\r\n                    name=\"author\"\r\n                    value={author}\r\n                    onChange={authorInputHandler}\r\n                />\r\n                <label>Description</label>\r\n                <textarea\r\n                    className=\"form-input\"\r\n                    value={description}\r\n                    onChange={descriptionInputHandler}\r\n                />\r\n                <div className=\"form-buttons\">\r\n                    <button className=\"button\" onClick={submitHandler}>\r\n                        Save New\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={updateHandler}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={deleteHandler}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={clearSelectionHandler}\r\n                    >\r\n                        Clear book selection\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}