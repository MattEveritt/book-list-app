{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meeve\\\\OneDrive\\\\Desktop\\\\Assignment\\\\Client\\\\book-list\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport bookService from '../services/book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    currentBook,\n    books,\n    setBooks\n  } = _ref;\n  const [id, setId] = useState(currentBook.id);\n  const [title, setTitle] = useState(currentBook.title);\n  const [author, setAuthor] = useState(currentBook.author);\n  const [description, setDescription] = useState(currentBook.description);\n  useEffect(() => {\n    setId(currentBook.id);\n    setTitle(currentBook.title);\n    setAuthor(currentBook.author);\n    setDescription(currentBook.description);\n  }, [currentBook]);\n\n  const titleInputHandler = e => {\n    setTitle(e.target.value);\n  };\n\n  const authorInputHandler = e => {\n    setAuthor(e.target.value);\n  };\n\n  const descriptionInputHandler = e => {\n    setDescription(e.target.value);\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const newBook = {\n      title: title,\n      author: author,\n      description: description\n    };\n\n    try {\n      const res = await bookService.addBook(newBook);\n      const newBooks = books.push(newBook);\n      setBooks(newBooks);\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(title, author, description);\n  };\n\n  const updateHandler = async () => {\n    const updatedBook = { ...currentBook,\n      title: title,\n      author: author,\n      description: description\n    };\n\n    try {\n      const res = await bookService.updateBook(currentBook.id, updatedBook);\n      const newBooks = books.map(b => b.id === updatedBook.id ? updatedBook : b);\n      setBooks(newBooks);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteHandler = async () => {\n    try {\n      await bookService.deleteBook(currentBook.id);\n      const newBooks = books.map(b => b.id !== currentBook.id);\n      setBooks(newBooks);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: titleInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        value: author,\n        onChange: authorInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: descriptionInputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Save New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteHandler,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"1NssZq/FSB1B3KkRMn/1VPX8rww=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/src/components/Form.js"],"names":["React","useState","useEffect","bookService","Form","currentBook","books","setBooks","id","setId","title","setTitle","author","setAuthor","description","setDescription","titleInputHandler","e","target","value","authorInputHandler","descriptionInputHandler","submitHandler","preventDefault","newBook","res","addBook","newBooks","push","error","console","log","updateHandler","updatedBook","updateBook","map","b","deleteHandler","deleteBook"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport bookService from '../services/book'\r\n\r\nconst Form = ({ currentBook, books, setBooks }) => {\r\n    const [id, setId] = useState(currentBook.id)\r\n    const [title, setTitle] = useState(currentBook.title)\r\n    const [author, setAuthor] = useState(currentBook.author)\r\n    const [description, setDescription] = useState(currentBook.description)\r\n\r\n    useEffect(() => {\r\n        setId(currentBook.id)\r\n        setTitle(currentBook.title)\r\n        setAuthor(currentBook.author)\r\n        setDescription(currentBook.description)\r\n    }, [currentBook])\r\n\r\n    const titleInputHandler = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const authorInputHandler = (e) => {\r\n        setAuthor(e.target.value)\r\n    }\r\n\r\n    const descriptionInputHandler = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const newBook = {\r\n            title: title,\r\n            author: author,\r\n            description: description,\r\n        }\r\n\r\n        try {\r\n            const res = await bookService.addBook(newBook)\r\n            const newBooks = books.push(newBook)\r\n            setBooks(newBooks)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        console.log(title, author, description)\r\n    }\r\n\r\n    const updateHandler = async () => {\r\n        const updatedBook = {\r\n            ...currentBook,\r\n            title: title,\r\n            author: author,\r\n            description: description,\r\n        }\r\n        try {\r\n            const res = await bookService.updateBook(\r\n                currentBook.id,\r\n                updatedBook\r\n            )\r\n            const newBooks = books.map((b) =>\r\n                b.id === updatedBook.id ? updatedBook : b\r\n            )\r\n            setBooks(newBooks)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteHandler = async () => {\r\n        try {\r\n            await bookService.deleteBook(currentBook.id)\r\n            const newBooks = books.map((b) => b.id !== currentBook.id)\r\n            setBooks(newBooks)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <form onSubmit={submitHandler}>\r\n                <label>Title</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={titleInputHandler}\r\n                />\r\n                <label>Author</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"author\"\r\n                    value={author}\r\n                    onChange={authorInputHandler}\r\n                />\r\n                <label>Description</label>\r\n                <textarea\r\n                    value={description}\r\n                    onChange={descriptionInputHandler}\r\n                />\r\n                <div className=\"form-buttons\">\r\n                    <input type=\"submit\" value=\"Save New\" />\r\n                    <button onClick={updateHandler}>Save</button>\r\n                    <button onClick={deleteHandler}>Delete</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}