{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meeve\\\\OneDrive\\\\Desktop\\\\Assignment\\\\Client\\\\book-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport List from './components/List';\nimport bookService from './services/book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [currentBook, setCurrentBook] = useState({\n    id: null,\n    title: null,\n    author: null,\n    description: null\n  });\n  const [books, setBooks] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null); //Fetch books from the server on first render only\n\n  useEffect(() => {\n    const getBooks = async () => {\n      try {\n        const {\n          data\n        } = await bookService.getBooks();\n        setBooks(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      setSelectedBook: setSelectedBook,\n      currentBook: currentBook,\n      setCurrentBook: setCurrentBook,\n      books: books,\n      setBooks: setBooks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      selectedBook: selectedBook,\n      setSelectedBook: setSelectedBook,\n      setCurrentBook: setCurrentBook,\n      bookList: books\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"j9rYpKmP8XPVlVg2XpfxFOLRpqY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/src/App.js"],"names":["React","useState","useEffect","Form","List","bookService","App","currentBook","setCurrentBook","id","title","author","description","books","setBooks","selectedBook","setSelectedBook","getBooks","data","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC;AAC3CQ,IAAAA,EAAE,EAAE,IADuC;AAE3CC,IAAAA,KAAK,EAAE,IAFoC;AAG3CC,IAAAA,MAAM,EAAE,IAHmC;AAI3CC,IAAAA,WAAW,EAAE;AAJ8B,GAAD,CAA9C;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,IAAD,CAAhD,CARc,CAUd;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,QAAQ,GAAG,YAAY;AACzB,UAAI;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMb,WAAW,CAACY,QAAZ,EAAvB;AACAH,QAAAA,QAAQ,CAACI,IAAD,CAAR;AACH,OAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAPD;;AAQAF,IAAAA,QAAQ;AACX,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,IAAD;AACI,MAAA,eAAe,EAAED,eADrB;AAEI,MAAA,WAAW,EAAET,WAFjB;AAGI,MAAA,cAAc,EAAEC,cAHpB;AAII,MAAA,KAAK,EAAEK,KAJX;AAKI,MAAA,QAAQ,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,IAAD;AACI,MAAA,YAAY,EAAEC,YADlB;AAEI,MAAA,eAAe,EAAEC,eAFrB;AAGI,MAAA,cAAc,EAAER,cAHpB;AAII,MAAA,QAAQ,EAAEK;AAJd;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAxCD;;GAAMP,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport Form from './components/Form'\nimport List from './components/List'\nimport bookService from './services/book'\n\nconst App = () => {\n    const [currentBook, setCurrentBook] = useState({\n        id: null,\n        title: null,\n        author: null,\n        description: null,\n    })\n    const [books, setBooks] = useState([])\n    const [selectedBook, setSelectedBook] = useState(null)\n\n    //Fetch books from the server on first render only\n    useEffect(() => {\n        const getBooks = async () => {\n            try {\n                const { data } = await bookService.getBooks()\n                setBooks(data)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getBooks()\n    }, [])\n\n    return (\n        <div className=\"app\">\n            <Form\n                setSelectedBook={setSelectedBook}\n                currentBook={currentBook}\n                setCurrentBook={setCurrentBook}\n                books={books}\n                setBooks={setBooks}\n            />\n            <List\n                selectedBook={selectedBook}\n                setSelectedBook={setSelectedBook}\n                setCurrentBook={setCurrentBook}\n                bookList={books}\n            />\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}