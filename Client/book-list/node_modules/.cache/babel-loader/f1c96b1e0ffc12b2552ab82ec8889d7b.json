{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meeve\\\\OneDrive\\\\Desktop\\\\Assignment\\\\Client\\\\book-list\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport bookService from '../services/book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    setSelectedBook,\n    currentBook,\n    setCurrentBook,\n    books,\n    setBooks\n  } = _ref;\n  const [title, setTitle] = useState(currentBook.title);\n  const [author, setAuthor] = useState(currentBook.author);\n  const [description, setDescription] = useState(currentBook.description);\n  const [isDisabled, setIsDisabled] = useState(true);\n  useEffect(() => {\n    setTitle(currentBook.title);\n    setAuthor(currentBook.author);\n    setDescription(currentBook.description); // Only change buttons disabled state after a currentbook is set by user\n\n    currentBook.id ? setIsDisabled(false) : setIsDisabled(true);\n  }, [currentBook]);\n\n  const titleInputHandler = e => {\n    setTitle(e.target.value);\n  };\n\n  const authorInputHandler = e => {\n    setAuthor(e.target.value);\n  };\n\n  const descriptionInputHandler = e => {\n    setDescription(e.target.value);\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    const newBook = {\n      title: title,\n      author: author,\n      description: description\n    };\n\n    try {\n      const {\n        data\n      } = await bookService.addBook(newBook); // const newBooks = books.push(newBook)\n\n      console.log(data); // setBooks(newBooks)\n      // window.alert(`${newBook.title} saved`)\n    } catch (error) {\n      console.log('Error: addBook');\n      console.log(error);\n    }\n  };\n\n  const updateHandler = async e => {\n    e.preventDefault();\n    const updatedBook = { ...currentBook,\n      title: title,\n      author: author,\n      description: description\n    };\n\n    try {\n      await bookService.updateBook(currentBook.id, updatedBook);\n      const newBooks = books.map(b => b.id === updatedBook.id ? updatedBook : b);\n      setBooks(newBooks);\n    } catch (error) {\n      console.log('Error: updateBook');\n      console.log(error);\n    }\n  };\n\n  const deleteHandler = async e => {\n    e.preventDefault();\n\n    try {\n      await bookService.deleteBook(currentBook.id);\n      const newBooks = books.filter(b => b.id !== currentBook.id);\n      setBooks(newBooks);\n    } catch (error) {\n      console.log('Error: deleteBook');\n      console.log(error);\n    }\n\n    const clearedFormData = {\n      id: null,\n      title: null,\n      author: null,\n      description: null\n    };\n    setCurrentBook(clearedFormData);\n  };\n\n  const clearSelectionHandler = e => {\n    e.preventDefault();\n    const clearedFormData = {\n      id: null,\n      title: null,\n      author: null,\n      description: null\n    };\n    setCurrentBook(clearedFormData);\n    setSelectedBook(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Book Form: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          name: \"title\",\n          value: title ? title : '',\n          onChange: titleInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          name: \"author\",\n          value: author ? author : '',\n          onChange: authorInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          className: \"form-textarea\",\n          name: \"description\",\n          value: description ? description : '',\n          onChange: descriptionInputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: submitHandler,\n          children: \"Save New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          disabled: isDisabled,\n          onClick: updateHandler,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          disabled: isDisabled,\n          onClick: deleteHandler,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          disabled: isDisabled,\n          onClick: clearSelectionHandler,\n          children: \"Clear book selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"u5y+avmGOari0w8QeQ8U2RVQ0wY=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/src/components/Form.js"],"names":["React","useState","useEffect","bookService","Form","setSelectedBook","currentBook","setCurrentBook","books","setBooks","title","setTitle","author","setAuthor","description","setDescription","isDisabled","setIsDisabled","id","titleInputHandler","e","target","value","authorInputHandler","descriptionInputHandler","submitHandler","preventDefault","newBook","data","addBook","console","log","error","updateHandler","updatedBook","updateBook","newBooks","map","b","deleteHandler","deleteBook","filter","clearedFormData","clearSelectionHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport bookService from '../services/book'\r\n\r\nconst Form = ({\r\n    setSelectedBook,\r\n    currentBook,\r\n    setCurrentBook,\r\n    books,\r\n    setBooks,\r\n}) => {\r\n    const [title, setTitle] = useState(currentBook.title)\r\n    const [author, setAuthor] = useState(currentBook.author)\r\n    const [description, setDescription] = useState(currentBook.description)\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTitle(currentBook.title)\r\n        setAuthor(currentBook.author)\r\n        setDescription(currentBook.description)\r\n\r\n        // Only change buttons disabled state after a currentbook is set by user\r\n        currentBook.id ? setIsDisabled(false) : setIsDisabled(true)\r\n    }, [currentBook])\r\n\r\n    const titleInputHandler = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const authorInputHandler = (e) => {\r\n        setAuthor(e.target.value)\r\n    }\r\n\r\n    const descriptionInputHandler = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        const newBook = {\r\n            title: title,\r\n            author: author,\r\n            description: description,\r\n        }\r\n        try {\r\n            const { data } = await bookService.addBook(newBook)\r\n            // const newBooks = books.push(newBook)\r\n            console.log(data)\r\n            // setBooks(newBooks)\r\n            // window.alert(`${newBook.title} saved`)\r\n        } catch (error) {\r\n            console.log('Error: addBook')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const updateHandler = async (e) => {\r\n        e.preventDefault()\r\n        const updatedBook = {\r\n            ...currentBook,\r\n            title: title,\r\n            author: author,\r\n            description: description,\r\n        }\r\n        try {\r\n            await bookService.updateBook(currentBook.id, updatedBook)\r\n            const newBooks = books.map((b) =>\r\n                b.id === updatedBook.id ? updatedBook : b\r\n            )\r\n            setBooks(newBooks)\r\n        } catch (error) {\r\n            console.log('Error: updateBook')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteHandler = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await bookService.deleteBook(currentBook.id)\r\n            const newBooks = books.filter((b) => b.id !== currentBook.id)\r\n            setBooks(newBooks)\r\n        } catch (error) {\r\n            console.log('Error: deleteBook')\r\n            console.log(error)\r\n        }\r\n        const clearedFormData = {\r\n            id: null,\r\n            title: null,\r\n            author: null,\r\n            description: null,\r\n        }\r\n        setCurrentBook(clearedFormData)\r\n    }\r\n\r\n    const clearSelectionHandler = (e) => {\r\n        e.preventDefault()\r\n        const clearedFormData = {\r\n            id: null,\r\n            title: null,\r\n            author: null,\r\n            description: null,\r\n        }\r\n        setCurrentBook(clearedFormData)\r\n        setSelectedBook(null)\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <h3>Book Form: </h3>\r\n            <form>\r\n                <label>Title</label>\r\n                <div>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        value={title ? title : ''}\r\n                        onChange={titleInputHandler}\r\n                    />\r\n                </div>\r\n                <label>Author</label>\r\n                <div>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        name=\"author\"\r\n                        value={author ? author : ''}\r\n                        onChange={authorInputHandler}\r\n                    />\r\n                </div>\r\n                <label>Description</label>\r\n                <div>\r\n                    <textarea\r\n                        rows=\"3\"\r\n                        className=\"form-textarea\"\r\n                        name=\"description\"\r\n                        value={description ? description : ''}\r\n                        onChange={descriptionInputHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"form-buttons\">\r\n                    <button className=\"button\" onClick={submitHandler}>\r\n                        Save New\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={updateHandler}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={deleteHandler}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={clearSelectionHandler}\r\n                    >\r\n                        Clear book selection\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}