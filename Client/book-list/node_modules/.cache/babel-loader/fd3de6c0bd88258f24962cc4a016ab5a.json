{"ast":null,"code":"import _objectSpread from\"C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import bookService from'../services/book';// Reset values for the form\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var clearedFormData={id:null,title:null,author:null,description:null};var Form=function Form(_ref){var setSelectedBook=_ref.setSelectedBook,currentBook=_ref.currentBook,setCurrentBook=_ref.setCurrentBook,books=_ref.books,setBooks=_ref.setBooks;var _useState=useState(currentBook.title),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(currentBook.author),_useState4=_slicedToArray(_useState3,2),author=_useState4[0],setAuthor=_useState4[1];var _useState5=useState(currentBook.description),_useState6=_slicedToArray(_useState5,2),description=_useState6[0],setDescription=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isDisabled=_useState8[0],setIsDisabled=_useState8[1];useEffect(function(){setTitle(currentBook.title);setAuthor(currentBook.author);setDescription(currentBook.description);// Only change the buttons disabled state after a currentbook is set by user\ncurrentBook.id?setIsDisabled(false):setIsDisabled(true);},[currentBook]);var titleInputHandler=function titleInputHandler(e){setTitle(e.target.value);};var authorInputHandler=function authorInputHandler(e){setAuthor(e.target.value);};var descriptionInputHandler=function descriptionInputHandler(e){setDescription(e.target.value);};// Handles adding a new book when Save New button is clicked\nvar submitHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var newBook,_yield$bookService$ad,data,newBooks;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();// Create new book object to be sent to the server\nnewBook={title:title,author:author,description:description};_context.prev=2;_context.next=5;return bookService.addBook(newBook);case 5:_yield$bookService$ad=_context.sent;data=_yield$bookService$ad.data;newBooks=[].concat(_toConsumableArray(books),[data]);setBooks(newBooks);// Update the book list\nsetCurrentBook(clearedFormData);// Reset the form inputs\n_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](2);console.log('Error: addBook',_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[2,12]]);}));return function submitHandler(_x){return _ref2.apply(this,arguments);};}();// Handles updating a book when save button is clicked\nvar updateHandler=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var updatedBook,newBooks;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();// Updated book object to be sent to the server\nupdatedBook=_objectSpread(_objectSpread({},currentBook),{},{title:title,author:author,description:description});_context2.prev=2;_context2.next=5;return bookService.updateBook(currentBook.id,updatedBook);case 5:// Updates the book in the book list\nnewBooks=books.map(function(b){return b.id===updatedBook.id?updatedBook:b;});setBooks(newBooks);// Updates the book list if the update is successfull\nsetCurrentBook(clearedFormData);// Resets the form fields\n_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](2);console.log('Error: updateBook',_context2.t0);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[2,10]]);}));return function updateHandler(_x2){return _ref3.apply(this,arguments);};}();// Handles deleting a book when delete button is clicked\nvar deleteHandler=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var newBooks;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();_context3.prev=1;_context3.next=4;return bookService.deleteBook(currentBook.id);case 4:newBooks=books.filter(function(b){return b.id!==currentBook.id;});// New books array without deleted book\nsetBooks(newBooks);// Updates the book list if the update is successfull\n_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](1);console.log('Error: deleteBook',_context3.t0);case 11:setCurrentBook(clearedFormData);// Reset the form\ncase 12:case\"end\":return _context3.stop();}}},_callee3,null,[[1,8]]);}));return function deleteHandler(_x3){return _ref4.apply(this,arguments);};}();var clearSelectionHandler=function clearSelectionHandler(e){e.preventDefault();setCurrentBook(clearedFormData);// Reset the form\nsetSelectedBook(null);// Reset the selected book state\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Book Form: \"}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"form-input\",type:\"text\",name:\"title\",value:title?title:'',onChange:titleInputHandler})}),/*#__PURE__*/_jsx(\"label\",{children:\"Author\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{className:\"form-input\",type:\"text\",name:\"author\",value:author?author:'',onChange:authorInputHandler})}),/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"textarea\",{rows:\"3\",className:\"form-textarea\",name:\"description\",value:description?description:'',onChange:descriptionInputHandler})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"button\",disabled:!isDisabled,onClick:submitHandler,children:\"Save New\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",disabled:isDisabled,onClick:updateHandler,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",disabled:isDisabled,onClick:deleteHandler,children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",disabled:isDisabled,onClick:clearSelectionHandler,children:\"Clear book selection\"})]})]})]});};export default Form;","map":{"version":3,"sources":["C:/Users/meeve/OneDrive/Desktop/Assignment/Client/book-list/src/components/Form.js"],"names":["React","useState","useEffect","bookService","clearedFormData","id","title","author","description","Form","setSelectedBook","currentBook","setCurrentBook","books","setBooks","setTitle","setAuthor","setDescription","isDisabled","setIsDisabled","titleInputHandler","e","target","value","authorInputHandler","descriptionInputHandler","submitHandler","preventDefault","newBook","addBook","data","newBooks","console","log","updateHandler","updatedBook","updateBook","map","b","deleteHandler","deleteBook","filter","clearSelectionHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nimport bookService from '../services/book'\r\n\r\n// Reset values for the form\r\nconst clearedFormData = {\r\n    id: null,\r\n    title: null,\r\n    author: null,\r\n    description: null,\r\n}\r\n\r\nconst Form = ({\r\n    setSelectedBook,\r\n    currentBook,\r\n    setCurrentBook,\r\n    books,\r\n    setBooks,\r\n}) => {\r\n    const [title, setTitle] = useState(currentBook.title)\r\n    const [author, setAuthor] = useState(currentBook.author)\r\n    const [description, setDescription] = useState(currentBook.description)\r\n    const [isDisabled, setIsDisabled] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setTitle(currentBook.title)\r\n        setAuthor(currentBook.author)\r\n        setDescription(currentBook.description)\r\n\r\n        // Only change the buttons disabled state after a currentbook is set by user\r\n        currentBook.id ? setIsDisabled(false) : setIsDisabled(true)\r\n    }, [currentBook])\r\n\r\n    const titleInputHandler = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const authorInputHandler = (e) => {\r\n        setAuthor(e.target.value)\r\n    }\r\n\r\n    const descriptionInputHandler = (e) => {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    // Handles adding a new book when Save New button is clicked\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        // Create new book object to be sent to the server\r\n        const newBook = {\r\n            title: title,\r\n            author: author,\r\n            description: description,\r\n        }\r\n        try {\r\n            const { data } = await bookService.addBook(newBook)\r\n            const newBooks = [...books, data]\r\n            setBooks(newBooks) // Update the book list\r\n            setCurrentBook(clearedFormData) // Reset the form inputs\r\n        } catch (error) {\r\n            console.log('Error: addBook', error)\r\n        }\r\n    }\r\n\r\n    // Handles updating a book when save button is clicked\r\n    const updateHandler = async (e) => {\r\n        e.preventDefault()\r\n\r\n        // Updated book object to be sent to the server\r\n        const updatedBook = {\r\n            ...currentBook,\r\n            title: title,\r\n            author: author,\r\n            description: description,\r\n        }\r\n        try {\r\n            await bookService.updateBook(currentBook.id, updatedBook)\r\n\r\n            // Updates the book in the book list\r\n            const newBooks = books.map((b) =>\r\n                b.id === updatedBook.id ? updatedBook : b\r\n            )\r\n\r\n            setBooks(newBooks) // Updates the book list if the update is successfull\r\n            setCurrentBook(clearedFormData) // Resets the form fields\r\n        } catch (error) {\r\n            console.log('Error: updateBook', error)\r\n        }\r\n    }\r\n\r\n    // Handles deleting a book when delete button is clicked\r\n    const deleteHandler = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            await bookService.deleteBook(currentBook.id)\r\n\r\n            const newBooks = books.filter((b) => b.id !== currentBook.id) // New books array without deleted book\r\n            setBooks(newBooks) // Updates the book list if the update is successfull\r\n        } catch (error) {\r\n            console.log('Error: deleteBook', error)\r\n        }\r\n        \r\n        setCurrentBook(clearedFormData) // Reset the form\r\n    }\r\n\r\n    const clearSelectionHandler = (e) => {\r\n        e.preventDefault()\r\n        setCurrentBook(clearedFormData) // Reset the form\r\n        setSelectedBook(null) // Reset the selected book state\r\n    }\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <h3>Book Form: </h3>\r\n            <form>\r\n                <label>Title</label>\r\n                <div>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        value={title ? title : ''}\r\n                        onChange={titleInputHandler}\r\n                    />\r\n                </div>\r\n                <label>Author</label>\r\n                <div>\r\n                    <input\r\n                        className=\"form-input\"\r\n                        type=\"text\"\r\n                        name=\"author\"\r\n                        value={author ? author : ''}\r\n                        onChange={authorInputHandler}\r\n                    />\r\n                </div>\r\n                <label>Description</label>\r\n                <div>\r\n                    <textarea\r\n                        rows=\"3\"\r\n                        className=\"form-textarea\"\r\n                        name=\"description\"\r\n                        value={description ? description : ''}\r\n                        onChange={descriptionInputHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"form-buttons\">\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={!isDisabled}\r\n                        onClick={submitHandler}\r\n                    >\r\n                        Save New\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={updateHandler}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={deleteHandler}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                    <button\r\n                        className=\"button\"\r\n                        disabled={isDisabled}\r\n                        onClick={clearSelectionHandler}\r\n                    >\r\n                        Clear book selection\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}